{"ast":null,"code":"var _jsxFileName = \"/Users/yuanou/Desktop/memories_project/client/src/components/TableCreate/TableCreate.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { TextField, Box, Button, Typography, Paper } from '@material-ui/core';\nimport FireBase from 'react-file-base64';\nimport { useDispatch, useSelector } from 'react-redux';\nimport DoneOutlineIcon from '@mui/icons-material/DoneOutline';\nimport useStyles from './styles'; // import { createMeal,updateMeal } from '../../actions/menu';\n\nimport { createTable } from '../../actions/tables';\nimport Axios from 'axios'; // GET THE CURRENT ID\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst curTableIDs = [{\n  value: 1,\n  label: '1'\n}, {\n  value: 2,\n  label: '2'\n}, {\n  value: 3,\n  label: '3'\n}, {\n  value: 4,\n  label: '4'\n}, {\n  value: 5,\n  label: '5'\n}, {\n  value: 6,\n  label: '6'\n}];\nconst curMealIDs = [{\n  value: 1,\n  label: '1'\n}, {\n  value: 2,\n  label: '2'\n}, {\n  value: 3,\n  label: '3'\n}, {\n  value: 4,\n  label: '4'\n}];\nconst curMeals = [{\n  value: 'Pasta',\n  label: 'Pasta'\n}, {\n  value: 'Pizza',\n  label: 'Pizza'\n}, {\n  value: 'Burger',\n  label: 'Burger'\n}, {\n  value: 'Salad',\n  label: 'Salad'\n}];\n\nconst TableCreate = () => {\n  _s();\n\n  const [tableData, setTableData] = useState({\n    meal_id: 1,\n    meal_name: 'Pasta',\n    table_id: 1,\n    price: 0,\n    quantity: 0\n  });\n  const dispatchTables = useDispatch(); // useEffect(() => {\n  //     if(table) setTableData(table);\n  // }, [table])\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log('tableData is ' + tableData.meal_name);\n    dispatchTables(createTable(tableData));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    component: \"form\",\n    sx: {\n      '& .MuiTextField-root': {\n        m: 1,\n        width: '25ch'\n      }\n    },\n    noValidate: true,\n    autoComplete: \"off\",\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      children: [\"Create Table\", /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          id: \"filled-select-currency-native\",\n          select: true,\n          label: \"Meal ID\",\n          value: tableData.meal_id,\n          onChange: e => setTableData({ ...tableData,\n            meal_id: e.target.value\n          }),\n          SelectProps: {\n            native: true\n          } // helperText=\"Please select meal id\"\n          ,\n          variant: \"filled\",\n          children: curMealIDs.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: option.value,\n            children: option.label\n          }, option.value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"filled-select-currency-native\",\n          select: true,\n          label: \"Meal Name\",\n          value: tableData.meal_name,\n          onChange: e => setTableData({ ...tableData,\n            meal_name: e.target.value\n          }),\n          SelectProps: {\n            native: true\n          },\n          variant: \"filled\",\n          children: curMeals.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: option.value,\n            children: option.label\n          }, option.value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"filled-select-currency-native\",\n          select: true,\n          label: \"Table ID\",\n          value: tableData.table_id,\n          onChange: e => setTableData({ ...tableData,\n            table_id: e.target.value\n          }),\n          SelectProps: {\n            native: true\n          },\n          variant: \"filled\",\n          children: curTableIDs.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: option.value,\n            children: option.label\n          }, option.value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"standard-number\",\n          label: \"Quantity\",\n          type: \"number\",\n          InputLabelProps: {\n            shrink: true\n          },\n          variant: \"standard\",\n          margin: \"dense\",\n          value: tableData.quantity,\n          onChange: e => setTableData({ ...tableData,\n            quantity: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"standard-number\",\n          label: \"Price\",\n          type: \"number\",\n          InputLabelProps: {\n            shrink: true\n          },\n          variant: \"standard\",\n          margin: \"normal\",\n          value: tableData.price,\n          onChange: e => setTableData({ ...tableData,\n            price: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          size: \"medium\",\n          startIcon: /*#__PURE__*/_jsxDEV(DoneOutlineIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 69\n          }, this),\n          onClick: handleSubmit,\n          children: \"Done\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TableCreate, \"IsL2P0joUefNwxmSztJdOfVTo5k=\", false, function () {\n  return [useDispatch];\n});\n\n_c = TableCreate;\nexport default TableCreate;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableCreate\");","map":{"version":3,"sources":["/Users/yuanou/Desktop/memories_project/client/src/components/TableCreate/TableCreate.js"],"names":["React","useState","useEffect","TextField","Box","Button","Typography","Paper","FireBase","useDispatch","useSelector","DoneOutlineIcon","useStyles","createTable","Axios","curTableIDs","value","label","curMealIDs","curMeals","TableCreate","tableData","setTableData","meal_id","meal_name","table_id","price","quantity","dispatchTables","handleSubmit","e","preventDefault","console","log","m","width","target","native","map","option","shrink"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { TextField, Box, Button, Typography, Paper } from '@material-ui/core';\nimport FireBase from 'react-file-base64';\nimport { useDispatch, useSelector } from 'react-redux';\nimport DoneOutlineIcon from '@mui/icons-material/DoneOutline';\nimport useStyles from './styles';\n// import { createMeal,updateMeal } from '../../actions/menu';\nimport { createTable } from '../../actions/tables';\nimport  Axios  from 'axios';\n\n// GET THE CURRENT ID\n\nconst curTableIDs = [\n  {\n    value: 1,\n    label: '1',\n  },\n  {\n    value: 2,\n    label: '2',\n  },\n  {\n    value: 3,\n    label: '3',\n  },\n  {\n    value: 4,\n    label: '4',\n  },\n  {\n    value: 5,\n    label: '5',\n  },\n  {\n    value: 6,\n    label: '6',\n  },\n];\n\nconst curMealIDs = [\n    {\n      value: 1,\n      label: '1',\n    },\n    {\n      value: 2,\n      label: '2',\n    },\n    {\n      value: 3,\n      label: '3',\n    },\n    {\n      value: 4,\n      label: '4',\n    },\n  ];\n\nconst curMeals = [\n    {\n      value: 'Pasta',\n      label: 'Pasta',\n    },\n    {\n      value: 'Pizza',\n      label: 'Pizza',\n    },\n    {\n      value: 'Burger',\n      label: 'Burger',\n    },\n    {\n      value: 'Salad',\n      label: 'Salad',\n    },\n  ];\n\nconst TableCreate = () => {\n    const [tableData, setTableData] = useState({ meal_id: 1, meal_name: 'Pasta', table_id: 1, price: 0, quantity: 0 });\n    const dispatchTables = useDispatch();\n\n    // useEffect(() => {\n    //     if(table) setTableData(table);\n    // }, [table])\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        console.log('tableData is ' + tableData.meal_name);\n        dispatchTables(createTable(tableData));\n    }\n\n    return (\n        <Box component=\"form\" \n             sx={{ '& .MuiTextField-root': { m: 1, width: '25ch' },}}\n             noValidate autoComplete=\"off\">\n            <Paper>\n                Create Table\n            <div>\n                <TextField\n                    id=\"filled-select-currency-native\"\n                    select\n                    label=\"Meal ID\"\n                    value={tableData.meal_id} \n                    onChange={(e) => setTableData({ ...tableData, meal_id: e.target.value })}\n                    SelectProps={{\n                        native: true,\n                    }}\n                    // helperText=\"Please select meal id\"\n                    variant=\"filled\"\n                    >\n                    {curMealIDs.map((option) => (\n                        <option key={option.value} value={option.value}>\n                        {option.label}\n                        </option>\n                    ))}\n                </TextField>\n                <TextField\n                    id=\"filled-select-currency-native\"\n                    select\n                    label=\"Meal Name\"\n                    value={tableData.meal_name} \n                    onChange={(e) => setTableData({ ...tableData, meal_name: e.target.value })}\n                    SelectProps={{\n                        native: true,\n                    }}\n                    variant=\"filled\"\n                    >\n                    {curMeals.map((option) => (\n                        <option key={option.value} value={option.value}>\n                        {option.label}\n                        </option>\n                    ))}\n                </TextField>\n                <TextField\n                    id=\"filled-select-currency-native\"\n                    select\n                    label=\"Table ID\"\n                    value={tableData.table_id} \n                    onChange={(e) => setTableData({ ...tableData, table_id: e.target.value })}\n                    SelectProps={{\n                        native: true,\n                    }}\n                    variant=\"filled\"\n                    >\n                    {curTableIDs.map((option) => (\n                        <option key={option.value} value={option.value}>\n                        {option.label}\n                        </option>\n                    ))}\n                </TextField>\n                <TextField\n                    id=\"standard-number\"\n                    label=\"Quantity\"\n                    type=\"number\"\n                    InputLabelProps={{\n                        shrink: true,\n                    }}\n                    variant=\"standard\"\n                    margin='dense'\n                    value={tableData.quantity} \n                    onChange={(e) => setTableData({ ...tableData, quantity: e.target.value })}\n                />\n                <TextField\n                    id=\"standard-number\"\n                    label=\"Price\"\n                    type=\"number\"\n                    InputLabelProps={{\n                        shrink: true,\n                    }}\n                    variant=\"standard\"\n                    margin='normal'\n                    value={tableData.price} \n                    onChange={(e) => setTableData({ ...tableData, price: e.target.value })}\n                />\n                <Button variant=\"outlined\" size=\"medium\" startIcon={<DoneOutlineIcon />} onClick={handleSubmit}>\n                    Done\n                </Button>\n            </div>\n            </Paper>\n        </Box>\n    );\n}\n\nexport default TableCreate; "]},"metadata":{},"sourceType":"module"}