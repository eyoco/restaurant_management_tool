{"ast":null,"code":"var _jsxFileName = \"/Users/yuanou/Desktop/memories_project/client/src/components/TableUpdate/TableUpdate.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { TextField, Box, Button, Typography, Paper, Divider } from '@material-ui/core';\nimport FireBase from 'react-file-base64';\nimport { useDispatch, useSelector } from 'react-redux';\nimport DoneOutlineIcon from '@mui/icons-material/DoneOutline';\nimport useStyles from './styles';\nimport { createMeal, updateMeal } from '../../actions/menu';\nimport { spacing } from '@material-ui/system';\nimport { updateTable } from '../../actions/tables'; // GET THE CURRENT ID\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst curTableIDs = [{\n  value: 1,\n  label: '1'\n}, {\n  value: 2,\n  label: '2'\n}, {\n  value: 3,\n  label: '3'\n}, {\n  value: 4,\n  label: '4'\n}, {\n  value: 5,\n  label: '5'\n}, {\n  value: 6,\n  label: '6'\n}];\nconst curMealIDs = [{\n  value: 1,\n  label: '1'\n}, {\n  value: 2,\n  label: '2'\n}, {\n  value: 3,\n  label: '3'\n}, {\n  value: 4,\n  label: '4'\n}];\nconst curMeals = [{\n  value: 'Pasta',\n  label: 'Pasta'\n}, {\n  value: 'Pizza',\n  label: 'Pizza'\n}, {\n  value: 'Burger',\n  label: 'Burger'\n}, {\n  value: 'Salad',\n  label: 'Salad'\n}]; // const TableUpdate = ({ oid }) => {\n\nconst TableUpdate = _ref => {\n  _s();\n\n  let {\n    oid\n  } = _ref;\n  const [tableData, setTableData] = useState({\n    order_id: 1,\n    meal_id: 1,\n    meal_name: 'Pasta',\n    table_id: 1,\n    price: 0,\n    quantity: 0\n  });\n  const dispatchTables = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log('tableData is ' + tableData.meal_name);\n    dispatchTables(updateTable(tableData));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    component: \"form\",\n    sx: {\n      '& .MuiTextField-root': {\n        m: 1,\n        width: '25ch'\n      }\n    },\n    noValidate: true,\n    autoComplete: \"off\",\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      children: [\"Update Table\", /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          id: \"standard-number\",\n          label: \"Order ID\",\n          type: \"number\",\n          InputLabelProps: {\n            shrink: true\n          },\n          variant: \"standard\",\n          margin: \"dense\",\n          value: tableData.order_id,\n          onChange: e => setTableData({ ...tableData,\n            order_id: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"standard-read-only-input\",\n          label: \"Meal ID\",\n          defaultValue: \"Hello World\",\n          margin: \"dense\" // InputProps={{\n          //     readOnly: true,\n          // }}\n          ,\n          variant: \"standard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"filled-select-currency-native\",\n          select: true,\n          label: \"Meal ID\",\n          value: tableData.meal_id,\n          onChange: e => setTableData({ ...tableData,\n            meal_id: e.target.value\n          }),\n          SelectProps: {\n            native: true\n          } // helperText=\"Please select meal id\"\n          ,\n          variant: \"filled\",\n          children: curMealIDs.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: option.value,\n            children: option.label\n          }, option.value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"filled-select-currency-native\",\n          select: true,\n          label: \"Meal Name\",\n          value: tableData.meal_name,\n          onChange: e => setTableData({ ...tableData,\n            meal_name: e.target.value\n          }),\n          SelectProps: {\n            native: true\n          },\n          variant: \"filled\",\n          children: curMeals.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: option.value,\n            children: option.label\n          }, option.value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"filled-select-currency-native\",\n          select: true,\n          label: \"Table ID\",\n          value: tableData.table_id,\n          onChange: e => setTableData({ ...tableData,\n            table_id: e.target.value\n          }),\n          SelectProps: {\n            native: true\n          },\n          variant: \"filled\",\n          children: curTableIDs.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: option.value,\n            children: option.label\n          }, option.value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"standard-number\",\n          label: \"Quantity\",\n          type: \"number\",\n          InputLabelProps: {\n            shrink: true\n          },\n          variant: \"standard\",\n          margin: \"dense\",\n          value: tableData.quantity,\n          onChange: e => setTableData({ ...tableData,\n            quantity: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"standard-number\",\n          label: \"Price\",\n          type: \"number\",\n          InputLabelProps: {\n            shrink: true\n          },\n          variant: \"standard\",\n          margin: \"normal\",\n          value: tableData.price,\n          onChange: e => setTableData({ ...tableData,\n            price: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          startIcon: /*#__PURE__*/_jsxDEV(DoneOutlineIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 55\n          }, this),\n          onClick: handleSubmit,\n          children: \"Done\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TableUpdate, \"sisM9j2k+3FQe91xRWzLq+LIJls=\", false, function () {\n  return [useDispatch];\n});\n\n_c = TableUpdate;\nexport default TableUpdate;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableUpdate\");","map":{"version":3,"sources":["/Users/yuanou/Desktop/memories_project/client/src/components/TableUpdate/TableUpdate.js"],"names":["React","useState","useEffect","TextField","Box","Button","Typography","Paper","Divider","FireBase","useDispatch","useSelector","DoneOutlineIcon","useStyles","createMeal","updateMeal","spacing","updateTable","curTableIDs","value","label","curMealIDs","curMeals","TableUpdate","oid","tableData","setTableData","order_id","meal_id","meal_name","table_id","price","quantity","dispatchTables","handleSubmit","e","preventDefault","console","log","m","width","shrink","target","native","map","option"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { TextField, Box, Button, Typography, Paper, Divider } from '@material-ui/core';\nimport FireBase from 'react-file-base64';\nimport { useDispatch, useSelector } from 'react-redux';\nimport DoneOutlineIcon from '@mui/icons-material/DoneOutline';\nimport useStyles from './styles';\nimport { createMeal,updateMeal } from '../../actions/menu';\nimport { spacing } from '@material-ui/system';\nimport { updateTable } from '../../actions/tables';\n\n// GET THE CURRENT ID\nconst curTableIDs = [\n    {\n      value: 1,\n      label: '1',\n    },\n    {\n      value: 2,\n      label: '2',\n    },\n    {\n      value: 3,\n      label: '3',\n    },\n    {\n      value: 4,\n      label: '4',\n    },\n    {\n      value: 5,\n      label: '5',\n    },\n    {\n      value: 6,\n      label: '6',\n    },\n  ];\n  \n  const curMealIDs = [\n      {\n        value: 1,\n        label: '1',\n      },\n      {\n        value: 2,\n        label: '2',\n      },\n      {\n        value: 3,\n        label: '3',\n      },\n      {\n        value: 4,\n        label: '4',\n      },\n    ];\n  \n  const curMeals = [\n      {\n        value: 'Pasta',\n        label: 'Pasta',\n      },\n      {\n        value: 'Pizza',\n        label: 'Pizza',\n      },\n      {\n        value: 'Burger',\n        label: 'Burger',\n      },\n      {\n        value: 'Salad',\n        label: 'Salad',\n      },\n    ];\n  \n\n// const TableUpdate = ({ oid }) => {\nconst TableUpdate = ({ oid }) => {\n    const [tableData, setTableData] = useState({ order_id: 1, meal_id: 1, meal_name: 'Pasta', table_id: 1, price: 0, quantity: 0 });\n    const dispatchTables = useDispatch();\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        console.log('tableData is ' + tableData.meal_name);\n        dispatchTables(updateTable(tableData));\n    }\n    return (\n        <Box component=\"form\" \n             sx={{ '& .MuiTextField-root': { m: 1, width: '25ch' },}}\n             noValidate autoComplete=\"off\">\n            <Paper>\n                Update Table\n            <div>\n                <TextField\n                    id=\"standard-number\"\n                    label=\"Order ID\"\n                    type=\"number\"\n                    InputLabelProps={{\n                        shrink: true,\n                    }}\n                    variant=\"standard\"\n                    margin='dense'\n                    value={tableData.order_id} \n                    onChange={(e) => setTableData({ ...tableData, order_id: e.target.value })}\n                />\n                <TextField\n                    id=\"standard-read-only-input\"\n                    label=\"Meal ID\"\n                    defaultValue=\"Hello World\"\n                    margin='dense'\n                    // InputProps={{\n                    //     readOnly: true,\n                    // }}\n                    variant=\"standard\"\n                />\n                <TextField\n                    id=\"filled-select-currency-native\"\n                    select\n                    label=\"Meal ID\"\n                    value={tableData.meal_id} \n                    onChange={(e) => setTableData({ ...tableData, meal_id: e.target.value })}\n                    SelectProps={{\n                        native: true,\n                    }}\n                    // helperText=\"Please select meal id\"\n                    variant=\"filled\"\n                    >\n                    {curMealIDs.map((option) => (\n                        <option key={option.value} value={option.value}>\n                        {option.label}\n                        </option>\n                    ))}\n                </TextField>\n                <TextField\n                    id=\"filled-select-currency-native\"\n                    select\n                    label=\"Meal Name\"\n                    value={tableData.meal_name} \n                    onChange={(e) => setTableData({ ...tableData, meal_name: e.target.value })}\n                    SelectProps={{\n                        native: true,\n                    }}\n                    variant=\"filled\"\n                    >\n                    {curMeals.map((option) => (\n                        <option key={option.value} value={option.value}>\n                        {option.label}\n                        </option>\n                    ))}\n                </TextField>\n                <TextField\n                    id=\"filled-select-currency-native\"\n                    select\n                    label=\"Table ID\"\n                    value={tableData.table_id} \n                    onChange={(e) => setTableData({ ...tableData, table_id: e.target.value })}\n                    SelectProps={{\n                        native: true,\n                    }}\n                    variant=\"filled\"\n                    >\n                    {curTableIDs.map((option) => (\n                        <option key={option.value} value={option.value}>\n                        {option.label}\n                        </option>\n                    ))}\n                </TextField>\n                <TextField\n                    id=\"standard-number\"\n                    label=\"Quantity\"\n                    type=\"number\"\n                    InputLabelProps={{\n                        shrink: true,\n                    }}\n                    variant=\"standard\"\n                    margin='dense'\n                    value={tableData.quantity} \n                    onChange={(e) => setTableData({ ...tableData, quantity: e.target.value })}\n                />\n                <TextField\n                    id=\"standard-number\"\n                    label=\"Price\"\n                    type=\"number\"\n                    InputLabelProps={{\n                        shrink: true,\n                    }}\n                    variant=\"standard\"\n                    margin='normal'\n                    value={tableData.price} \n                    onChange={(e) => setTableData({ ...tableData, price: e.target.value })}\n                />\n                <Divider></Divider>\n                <Button variant=\"outlined\" startIcon={<DoneOutlineIcon />} onClick={handleSubmit} >\n                    Done\n                </Button>\n            </div>\n            </Paper>\n        </Box>\n    );\n}\n\nexport default TableUpdate;"]},"metadata":{},"sourceType":"module"}