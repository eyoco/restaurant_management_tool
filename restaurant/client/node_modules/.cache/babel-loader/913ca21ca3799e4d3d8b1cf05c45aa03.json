{"ast":null,"code":"import { FETCH_ALL, CREATE, UPDATE, DELETE } from '../constants/actionTypes';\nimport * as api from '../api';\nimport axios from 'axios'; // Action Creators\n\nexport const getTables = tid => async dispatchTables => {\n  try {\n    const {\n      data\n    } = await api.fetchTables(tid);\n    dispatchTables({\n      type: FETCH_ALL,\n      payload: data\n    });\n  } catch (error) {\n    console.log(api.fetchTables());\n    console.log(error.message);\n  }\n};\nexport const createTable = table => async dispatchTables => {\n  const json = JSON.stringify({\n    meal_id: table.meal_id,\n    meal_name: table.meal_name,\n    table_id: table.table_id,\n    price: table.price,\n    quantity: table.quantity\n  });\n\n  try {\n    const res = axios.post('http://localhost:3002/tables', json, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n  } catch (error) {}\n};\nexport const updateTable = table => async dispatchTables => {\n  const json = JSON.stringify({\n    order_id: table.order_id,\n    meal_id: table.meal_id,\n    meal_name: table.meal_name,\n    table_id: table.table_id,\n    price: table.price,\n    quantity: table.quantity\n  });\n\n  try {\n    const res = axios.put('http://localhost:3002/update', json, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n  } catch (error) {}\n};\nexport const deleteTable = table => async dispatchTables => {\n  // console.log('oid is ' + oid);\n  const json = JSON.stringify({\n    order_id: table\n  }); // const oid = oid;\n\n  console.log('json is ' + json);\n\n  try {\n    const res = axios.delete('http://localhost:3002/delete', {\n      params: {// oid: oid,\n      }\n    });\n  } catch (error) {}\n}; // Axios.get('http://localhost:3002', {\n//         params: {\n//             tid: tid,\n//         },\n//     }).then((response) => {\n//         setTablesList(response.data);\n//     });","map":{"version":3,"sources":["/Users/yuanou/Desktop/memories_project/client/src/actions/tables.js"],"names":["FETCH_ALL","CREATE","UPDATE","DELETE","api","axios","getTables","tid","dispatchTables","data","fetchTables","type","payload","error","console","log","message","createTable","table","json","JSON","stringify","meal_id","meal_name","table_id","price","quantity","res","post","headers","updateTable","order_id","put","deleteTable","delete","params"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,MAApB,EAA4BC,MAA5B,EAAoCC,MAApC,QAAkD,0BAAlD;AACA,OAAO,KAAKC,GAAZ,MAAqB,QAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,OAAO,MAAMC,SAAS,GAAIC,GAAD,IAAS,MAAOC,cAAP,IAA0B;AACxD,MAAI;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAML,GAAG,CAACM,WAAJ,CAAgBH,GAAhB,CAAvB;AAEAC,IAAAA,cAAc,CAAC;AAAEG,MAAAA,IAAI,EAAEX,SAAR;AAAmBY,MAAAA,OAAO,EAAEH;AAA5B,KAAD,CAAd;AACH,GAJD,CAIE,OAAOI,KAAP,EAAc;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYX,GAAG,CAACM,WAAJ,EAAZ;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;AACH;AACJ,CATM;AAWP,OAAO,MAAMC,WAAW,GAAIC,KAAD,IAAW,MAAOV,cAAP,IAA0B;AAC5D,QAAMW,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AAAEC,IAAAA,OAAO,EAAEJ,KAAK,CAACI,OAAjB;AACEC,IAAAA,SAAS,EAAEL,KAAK,CAACK,SADnB;AAEEC,IAAAA,QAAQ,EAAEN,KAAK,CAACM,QAFlB;AAGEC,IAAAA,KAAK,EAAEP,KAAK,CAACO,KAHf;AAIEC,IAAAA,QAAQ,EAAER,KAAK,CAACQ;AAJlB,GAAf,CAAb;;AAKA,MAAI;AACA,UAAMC,GAAG,GAAGtB,KAAK,CAACuB,IAAN,CAAW,8BAAX,EAA2CT,IAA3C,EAAiD;AACzDU,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AADgD,KAAjD,CAAZ;AAKH,GAND,CAME,OAAOhB,KAAP,EAAc,CACf;AACJ,CAdM;AAgBP,OAAO,MAAMiB,WAAW,GAAIZ,KAAD,IAAW,MAAOV,cAAP,IAA0B;AAC5D,QAAMW,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AAAEU,IAAAA,QAAQ,EAAEb,KAAK,CAACa,QAAlB;AACET,IAAAA,OAAO,EAAEJ,KAAK,CAACI,OADjB;AAEEC,IAAAA,SAAS,EAAEL,KAAK,CAACK,SAFnB;AAGEC,IAAAA,QAAQ,EAAEN,KAAK,CAACM,QAHlB;AAIEC,IAAAA,KAAK,EAAEP,KAAK,CAACO,KAJf;AAKEC,IAAAA,QAAQ,EAAER,KAAK,CAACQ;AALlB,GAAf,CAAb;;AAMA,MAAI;AACA,UAAMC,GAAG,GAAGtB,KAAK,CAAC2B,GAAN,CAAU,8BAAV,EAA0Cb,IAA1C,EAAgD;AACxDU,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AAD+C,KAAhD,CAAZ;AAKH,GAND,CAME,OAAOhB,KAAP,EAAc,CACf;AACJ,CAfM;AAiBP,OAAO,MAAMoB,WAAW,GAAIf,KAAD,IAAW,MAAOV,cAAP,IAA0B;AAC5D;AACA,QAAMW,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AAAEU,IAAAA,QAAQ,EAAEb;AAAZ,GAAf,CAAb,CAF4D,CAG5D;;AACAJ,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAaI,IAAzB;;AACA,MAAI;AACA,UAAMQ,GAAG,GAAGtB,KAAK,CAAC6B,MAAN,CAAa,8BAAb,EAA6C;AACrDC,MAAAA,MAAM,EAAE,CACJ;AADI;AAD6C,KAA7C,CAAZ;AAKH,GAND,CAME,OAAOtB,KAAP,EAAc,CACf;AACJ,CAbM,C,CAeP;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { FETCH_ALL, CREATE, UPDATE, DELETE } from '../constants/actionTypes';\nimport * as api from '../api';\nimport axios from 'axios';\n\n// Action Creators\nexport const getTables = (tid) => async (dispatchTables) => {\n    try {\n        const { data } = await api.fetchTables(tid);\n\n        dispatchTables({ type: FETCH_ALL, payload: data });\n    } catch (error) {\n        console.log(api.fetchTables())\n        console.log(error.message);\n    }\n}\n\nexport const createTable = (table) => async (dispatchTables) => {\n    const json = JSON.stringify({ meal_id: table.meal_id,\n                                  meal_name: table.meal_name,\n                                  table_id: table.table_id,\n                                  price: table.price,\n                                  quantity: table.quantity,});\n    try {\n        const res = axios.post('http://localhost:3002/tables', json, {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        });\n    } catch (error) {\n    }\n}\n\nexport const updateTable = (table) => async (dispatchTables) => {\n    const json = JSON.stringify({ order_id: table.order_id,\n                                  meal_id: table.meal_id,\n                                  meal_name: table.meal_name,\n                                  table_id: table.table_id,\n                                  price: table.price,\n                                  quantity: table.quantity,});\n    try {\n        const res = axios.put('http://localhost:3002/update', json, {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        });\n    } catch (error) {\n    }\n}\n\nexport const deleteTable = (table) => async (dispatchTables) => {\n    // console.log('oid is ' + oid);\n    const json = JSON.stringify({ order_id: table });\n    // const oid = oid;\n    console.log('json is ' + json);\n    try {\n        const res = axios.delete('http://localhost:3002/delete', {\n            params: {\n                // oid: oid,\n            },\n        });\n    } catch (error) {\n    }\n}\n\n// Axios.get('http://localhost:3002', {\n//         params: {\n//             tid: tid,\n//         },\n//     }).then((response) => {\n//         setTablesList(response.data);\n//     });\n"]},"metadata":{},"sourceType":"module"}